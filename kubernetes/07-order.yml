# order.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-deployment
  labels:
    app: order
spec:
  replicas: 2
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: order
          image: digitalhippo/order:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: SPRING_PROFILES_ACTIVE
            - name: EUREKA_CLIENT_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: EUREKA_CLIENT_ENABLED
            - name: POSTGRES_URL
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: POSTGRES_URL
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: POSTGRES_PASSWORD
            - name: STRIPE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STRIPE_SECRET_KEY
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STRIPE_WEBHOOK_SECRET
            - name: STRIPE_PUBLISHABLE_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: STRIPE_PUBLISHABLE_KEY
            - name: FRONTEND_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: common-config
                  key: FRONTEND_ENDPOINT
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
  labels:
    app: order
spec:
  type: ClusterIP
  selector:
    app: order
  ports:
    - name: http
      port: 80
      targetPort: 8080
