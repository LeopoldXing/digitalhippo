services:
  localstack:
    image: localstack/localstack:3.8
    container_name: localstack-dh-dev
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sns,sqs
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
    networks:
      - digitalhippo-dev-network

  aws-setup:
    image: amazon/aws-cli:2.18.6
    container_name: aws-setup-dh-dev
    depends_on:
      - localstack
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    entrypoint: /bin/sh -c
    command: >
      sh -c "
      aws --endpoint-url=${LOCALSTACK_ENDPOINT} sns create-topic --name ${SNS_TOPIC_NAME} &&
      aws --endpoint-url=${LOCALSTACK_ENDPOINT} sqs create-queue --queue-name ${DLQ_QUEUE_NAME} &&
      DLQ_ARN=$(aws --endpoint-url=${LOCALSTACK_ENDPOINT} sqs get-queue-attributes --queue-url ${LOCALSTACK_ENDPOINT}/000000000000/${DLQ_QUEUE_NAME} --attribute-names QueueArn --query 'Attributes.QueueArn' --output text) &&
      aws --endpoint-url=${LOCALSTACK_ENDPOINT} sqs create-queue --queue-name ${RECEIPT_EMAIL_QUEUE_NAME} --attributes RedrivePolicy=\"{\\\"deadLetterTargetArn\\\":\\\"$DLQ_ARN\\\",\\\"maxReceiveCount\\\":\\\"5\\\"}\" &&
      aws --endpoint-url=${LOCALSTACK_ENDPOINT} sqs create-queue --queue-name ${VERIFICATION_EMAIL_QUEUE_NAME} --attributes RedrivePolicy=\"{\\\"deadLetterTargetArn\\\":\\\"$DLQ_ARN\\\",\\\"maxReceiveCount\\\":\\\"5\\\"}\" &&
      TOPIC_ARN=$(aws --endpoint-url=${LOCALSTACK_ENDPOINT} sns get-topic-attributes --topic-arn arn:aws:sns:${AWS_DEFAULT_REGION}:000000000000:${SNS_TOPIC_NAME} --query 'Attributes.TopicArn' --output text) &&
      echo SNS_TOPIC_ARN=$TOPIC_ARN > /config/sns_arn.env &&
      echo DLQ_ARN=$DLQ_ARN > /config/dlq_arn.env
      "
    volumes:
      - ./public-read-policy.json:/public-read-policy.json
    networks:
      - digitalhippo-dev-network

  redis:
    image: redis:7.0.14
    container_name: redis-dh-dev
    environment:
      - REDIS_PASSWORD=1234
    command: [ "redis-server", "--requirepass", "1234" ]
    ports:
      - "6379:6379"
    networks:
      - digitalhippo-dev-network

  postgres:
    image: postgres:16.4-alpine
    container_name: postgres-dh-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_USER: postgres
      POSTGRES_DB: digitalhippo
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - digitalhippo-dev-network

  mongodb:
    image: mongodb/mongodb-community-server:7.0.5-ubi8
    container_name: mongodb-dh-dev
    environment:
      - MONGO_INITDB_ROOT_USERNAME=lupin
      - MONGO_INITDB_ROOT_PASSWORD=1234
    ports:
      - "27017:27017"
    networks:
      - digitalhippo-dev-network

  # ELK Stack
  elasticsearch:
    container_name: elasticsearch-dh-dev
    image: elasticsearch:8.14.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - es01-log-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - digitalhippo-dev-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
  kibana:
    container_name: kibana-dh-dev
    image: kibana:8.14.1
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:5601 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

# digitalhippo application
#  eureka microservice
  eureka:
    container_name: dh-eureka-server
    image: leopoldhsing2/digitalhippo.eureka-server
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    depends_on:
      - localstack
      - redis
      - postgres
      - mongodb
      - elasticsearch
    networks:
      - digitalhippo-dev-network

# gateway microservice
  gateway:
    container_name: dh-gateway
    image: leopoldhsing2/digitalhippo.gateway
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    environment:
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      REDIS_PASSWORD: 1234
      REDIS_SESSION_DATABASE: 0
    depends_on:
      eureka:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network


networks:
  digitalhippo-dev-network:
    name: digitalhippo-dev-network
