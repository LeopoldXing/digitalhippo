services:
  localstack:
    image: localstack/localstack:3.8
    container_name: localstack-dh-dev
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,sns,sqs
      - DEBUG=1
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
      - DEFAULT_REGION=${AWS_REGION}
    networks:
      - digitalhippo-dev-network

  redis:
    image: redis:7.0.14
    container_name: redis-dh-dev
    environment:
      - REDIS_PASSWORD=1234
    command: [ "redis-server", "--requirepass", "1234" ]
    ports:
      - "6379:6379"
    networks:
      - digitalhippo-dev-network

  postgres:
    image: postgres:16.4-alpine
    container_name: postgres-dh-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_USER: postgres
      POSTGRES_DB: digitalhippo
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - digitalhippo-dev-network

  mongodb:
    image: mongodb/mongodb-community-server:7.0.5-ubi8
    container_name: mongodb-dh-dev
    environment:
      - MONGO_INITDB_ROOT_USERNAME=lupin
      - MONGO_INITDB_ROOT_PASSWORD=1234
    ports:
      - "27017:27017"
    networks:
      - digitalhippo-dev-network

  # ELK Stack
  elasticsearch:
    container_name: elasticsearch-dh-dev
    image: elasticsearch:8.14.1
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    # volumes:
    #   - es01-log-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - digitalhippo-dev-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9200 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
  kibana:
    container_name: kibana-dh-dev
    image: kibana:8.14.1
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:5601 || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network


  # digitalhippo application
  #  eureka microservice
  eureka:
    container_name: eureka-server
    image: digitalhippo/eureka-server:latest
    healthcheck:
      test: "curl --fail --silent localhost:9002/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

  # gateway microservice
  gateway:
    container_name: ms-gateway
    image: digitalhippo/gateway:latest
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    environment:
      REDIS_HOST: redis-dh-dev
      REDIS_PORT: 6379
      REDIS_PASSWORD: 1234
      REDIS_SESSION_DATABASE: 0
    depends_on:
      eureka:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

  # user microservice
  user:
    container_name: ms-user
    image: digitalhippo/user:latest
    healthcheck:
      test: "curl --fail --silent localhost:9004/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    environment:
      REDIS_HOST: redis-dh-dev
      REDIS_PORT: 6379
      REDIS_PASSWORD: 1234
      REDIS_SESSION_DATABASE: 0
      ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      POSTGRES_URL: jdbc:postgresql://postgres-dh-dev:5432/digitalhippo
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234567890
      SNS_TOPIC_ARN: arn:aws:sns:ca-central-1:000000000000:digitalhippo-email-topic
      SNS_ENDPOINT: http://localstack:4566
    depends_on:
      eureka:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

  # product microservice
  product:
    container_name: ms-product
    image: digitalhippo/product:latest
    healthcheck:
      test: "curl --fail --silent localhost:9006/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    environment:
      REDIS_HOST: redis-dh-dev
      REDIS_PORT: 6379
      REDIS_PASSWORD: 1234
      REDIS_SESSION_DATABASE: 0
      POSTGRES_URL: jdbc:postgresql://postgres-dh-dev:5432/digitalhippo
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234567890
      ES_ENDPOINT: http://elasticsearch:9200
    depends_on:
      eureka:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

  # stripe microservice
  stripe:
    container_name: ms-stripe
    image: digitalhippo/stripe:latest
    healthcheck:
      test: "curl --fail --silent localhost:9008/actuator/health/readiness | grep UP || exit 1"
      timeout: 10s
      retries: 40
      interval: 3s
      start_period: 3s
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: 1234
      REDIS_SESSION_DATABASE: 0
      AWS_REGION: ${AWS_REGION}
      ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
      POSTGRES_URL: jdbc:postgresql://postgres-dh-dev:5432/digitalhippo
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234567890
      ES_ENDPOINT: http://elasticsearch:9200
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    depends_on:
      eureka:
        condition: service_healthy
    networks:
      - digitalhippo-dev-network

networks:
  digitalhippo-dev-network:
    name: digitalhippo-dev-network
